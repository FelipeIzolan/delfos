import fs from "fs";
import path from "path";
function findFiles(filders, dir, ext, output, length) {
    let extAllowed = typeof ext === "string" ? [ext] : ext;
    filders.forEach(currentFilder => {
        let filderPath = dir + `/${currentFilder}`;
        let filderStat = fs.statSync(filderPath);
        if (filderStat.isFile() && output.length !== length) {
            const fileExt = path.extname(filderPath);
            if (extAllowed.includes(fileExt)) {
                let file = path.resolve(filderPath);
                output.push(file);
            }
        }
        if (filderStat.isDirectory()) {
            let files = fs.readdirSync(filderPath);
            findFiles(files, filderPath, ext, output, length);
        }
    });
}
function findByExt(dir, ext) {
    let files = fs.readdirSync(dir);
    let list = [];
    findFiles(files, dir, ext, list);
    return list;
}
function findOneByExt(dir, ext) {
    let files = fs.readdirSync(dir);
    let file = [];
    findFiles(files, dir, ext, file, 1);
    return file[0];
}
function findLengthByExt(dir, ext, length) {
    let files = fs.readdirSync(dir);
    let list = [];
    findFiles(files, dir, ext, list, length);
    return list;
}
export { findByExt, findOneByExt, findLengthByExt };
