#pragma once

#include <map>
#include <string>

class Mime {
  private:
    std::map<std::string, std::string> Content_Type;
  
  public:
    Mime() {
      Content_Type.insert({"*3gpp", "audio/3gpp"});
      Content_Type.insert({"*jpm", "video/jpm"});
      Content_Type.insert({"*mp3", "audio/mp3"});
      Content_Type.insert({"*rtf", "text/rtf"});
      Content_Type.insert({"*wav", "audio/wave"});
      Content_Type.insert({"*xml", "text/xml"});
      Content_Type.insert({"3g2", "video/3gpp2"});
      Content_Type.insert({"3gp", "video/3gpp"});
      Content_Type.insert({"3gpp", "video/3gpp"});
      Content_Type.insert({"ac", "application/pkix-attr-cert"});
      Content_Type.insert({"adp", "audio/adpcm"});
      Content_Type.insert({"ai", "application/postscript"});
      Content_Type.insert({"apng", "image/apng"});
      Content_Type.insert({"appcache", "text/cache-manifest"});
      Content_Type.insert({"asc", "application/pgp-signature"});
      Content_Type.insert({"atom", "application/atom+xml"});
      Content_Type.insert({"atomcat", "application/atomcat+xml"});
      Content_Type.insert({"atomsvc", "application/atomsvc+xml"});
      Content_Type.insert({"au", "audio/basic"});
      Content_Type.insert({"aw", "application/applixware"});
      Content_Type.insert({"bdoc", "application/bdoc"});
      Content_Type.insert({"bin", "application/octet-stream"});
      Content_Type.insert({"bmp", "image/bmp"});
      Content_Type.insert({"bpk", "application/octet-stream"});
      Content_Type.insert({"buffer", "application/octet-stream"});
      Content_Type.insert({"ccxml", "application/ccxml+xml"});
      Content_Type.insert({"cdmia", "application/cdmi-capability"});
      Content_Type.insert({"cdmic", "application/cdmi-container"});
      Content_Type.insert({"cdmid", "application/cdmi-domain"});
      Content_Type.insert({"cdmio", "application/cdmi-object"});
      Content_Type.insert({"cdmiq", "application/cdmi-queue"});
      Content_Type.insert({"cer", "application/pkix-cert"});
      Content_Type.insert({"cgm", "image/cgm"});
      Content_Type.insert({"class", "application/java-vm"});
      Content_Type.insert({"coffee", "text/coffeescript"});
      Content_Type.insert({"conf", "text/plain"});
      Content_Type.insert({"cpt", "application/mac-compactpro"});
      Content_Type.insert({"crl", "application/pkix-crl"});
      Content_Type.insert({"css", "text/css"});
      Content_Type.insert({"csv", "text/csv"});
      Content_Type.insert({"cu", "application/cu-seeme"});
      Content_Type.insert({"davmount", "application/davmount+xml"});
      Content_Type.insert({"dbk", "application/docbook+xml"});
      Content_Type.insert({"deb", "application/octet-stream"});
      Content_Type.insert({"def", "text/plain"});
      Content_Type.insert({"deploy", "application/octet-stream"});
      Content_Type.insert({"disposition-notification", "message/disposition-notification"});
      Content_Type.insert({"dist", "application/octet-stream"});
      Content_Type.insert({"distz", "application/octet-stream"});
      Content_Type.insert({"dll", "application/octet-stream"});
      Content_Type.insert({"dmg", "application/octet-stream"});
      Content_Type.insert({"dms", "application/octet-stream"});
      Content_Type.insert({"doc", "application/msword"});
      Content_Type.insert({"dot", "application/msword"});
      Content_Type.insert({"drle", "image/dicom-rle"});
      Content_Type.insert({"dssc", "application/dssc+der"});
      Content_Type.insert({"dtd", "application/xml-dtd"});
      Content_Type.insert({"dump", "application/octet-stream"});
      Content_Type.insert({"ear", "application/java-archive"});
      Content_Type.insert({"ecma", "application/ecmascript"});
      Content_Type.insert({"elc", "application/octet-stream"});
      Content_Type.insert({"emf", "image/emf"});
      Content_Type.insert({"eml", "message/rfc822"});
      Content_Type.insert({"emma", "application/emma+xml"});
      Content_Type.insert({"eps", "application/postscript"});
      Content_Type.insert({"epub", "application/epub+zip"});
      Content_Type.insert({"es", "application/ecmascript"});
      Content_Type.insert({"exe", "application/octet-stream"});
      Content_Type.insert({"exi", "application/exi"});
      Content_Type.insert({"exr", "image/aces"});
      Content_Type.insert({"ez", "application/andrew-inset"});
      Content_Type.insert({"fits", "image/fits"});
      Content_Type.insert({"g3", "image/g3fax"});
      Content_Type.insert({"gbr", "application/rpki-ghostbusters"});
      Content_Type.insert({"geojson", "application/geo+json"});
      Content_Type.insert({"gif", "image/gif"});
      Content_Type.insert({"glb", "model/gltf-binary"});
      Content_Type.insert({"gltf", "model/gltf+json"});
      Content_Type.insert({"gml", "application/gml+xml"});
      Content_Type.insert({"gpx", "application/gpx+xml"});
      Content_Type.insert({"gram", "application/srgs"});
      Content_Type.insert({"grxml", "application/srgs+xml"});
      Content_Type.insert({"gxf", "application/gxf"});
      Content_Type.insert({"gz", "application/gzip"});
      Content_Type.insert({"h261", "video/h261"});
      Content_Type.insert({"h263", "video/h263"});
      Content_Type.insert({"h264", "video/h264"});
      Content_Type.insert({"heic", "image/heic"});
      Content_Type.insert({"heics", "image/heic-sequence"});
      Content_Type.insert({"heif", "image/heif"});
      Content_Type.insert({"heifs", "image/heif-sequence"});
      Content_Type.insert({"hjson", "application/hjson"});
      Content_Type.insert({"hlp", "application/winhlp"});
      Content_Type.insert({"hqx", "application/mac-binhex40"});
      Content_Type.insert({"htm", "text/html"});
      Content_Type.insert({"html", "text/html"});
      Content_Type.insert({"ics", "text/calendar"});
      Content_Type.insert({"ief", "image/ief"});
      Content_Type.insert({"ifb", "text/calendar"});
      Content_Type.insert({"iges", "model/iges"});
      Content_Type.insert({"igs", "model/iges"});
      Content_Type.insert({"img", "application/octet-stream"});
      Content_Type.insert({"in", "text/plain"});
      Content_Type.insert({"ini", "text/plain"});
      Content_Type.insert({"ink", "application/inkml+xml"});
      Content_Type.insert({"inkml", "application/inkml+xml"});
      Content_Type.insert({"ipfix", "application/ipfix"});
      Content_Type.insert({"iso", "application/octet-stream"});
      Content_Type.insert({"jade", "text/jade"});
      Content_Type.insert({"jar", "application/java-archive"});
      Content_Type.insert({"jls", "image/jls"});
      Content_Type.insert({"jp2", "image/jp2"});
      Content_Type.insert({"jpe", "image/jpeg"});
      Content_Type.insert({"jpeg", "image/jpeg"});
      Content_Type.insert({"jpf", "image/jpx"});
      Content_Type.insert({"jpg", "image/jpeg"});
      Content_Type.insert({"jpg2", "image/jp2"});
      Content_Type.insert({"jpgm", "video/jpm"});
      Content_Type.insert({"jpgv", "video/jpeg"});
      Content_Type.insert({"jpm", "image/jpm"});
      Content_Type.insert({"jpx", "image/jpx"});
      Content_Type.insert({"js", "application/javascript"});
      Content_Type.insert({"json", "application/json"});
      Content_Type.insert({"json5", "application/json5"});
      Content_Type.insert({"jsonld", "application/ld+json"});
      Content_Type.insert({"jsonml", "application/jsonml+json"});
      Content_Type.insert({"jsx", "text/jsx"});
      Content_Type.insert({"kar", "audio/midi"});
      Content_Type.insert({"ktx", "image/ktx"});
      Content_Type.insert({"less", "text/less"});
      Content_Type.insert({"list", "text/plain"});
      Content_Type.insert({"litcoffee", "text/coffeescript"});
      Content_Type.insert({"log", "text/plain"});
      Content_Type.insert({"lostxml", "application/lost+xml"});
      Content_Type.insert({"lrf", "application/octet-stream"});
      Content_Type.insert({"m1v", "video/mpeg"});
      Content_Type.insert({"m21", "application/mp21"});
      Content_Type.insert({"m2a", "audio/mpeg"});
      Content_Type.insert({"m2v", "video/mpeg"});
      Content_Type.insert({"m3a", "audio/mpeg"});
      Content_Type.insert({"m4a", "audio/mp4"});
      Content_Type.insert({"m4p", "application/mp4"});
      Content_Type.insert({"ma", "application/mathematica"});
      Content_Type.insert({"mads", "application/mads+xml"});
      Content_Type.insert({"man", "text/troff"});
      Content_Type.insert({"manifest", "text/cache-manifest"});
      Content_Type.insert({"map", "application/json"});
      Content_Type.insert({"mar", "application/octet-stream"});
      Content_Type.insert({"markdown", "text/markdown"});
      Content_Type.insert({"mathml", "application/mathml+xml"});
      Content_Type.insert({"mb", "application/mathematica"});
      Content_Type.insert({"mbox", "application/mbox"});
      Content_Type.insert({"md", "text/markdown"});
      Content_Type.insert({"me", "text/troff"});
      Content_Type.insert({"mesh", "model/mesh"});
      Content_Type.insert({"meta4", "application/metalink4+xml"});
      Content_Type.insert({"metalink", "application/metalink+xml"});
      Content_Type.insert({"mets", "application/mets+xml"});
      Content_Type.insert({"mft", "application/rpki-manifest"});
      Content_Type.insert({"mid", "audio/midi"});
      Content_Type.insert({"midi", "audio/midi"});
      Content_Type.insert({"mime", "message/rfc822"});
      Content_Type.insert({"mj2", "video/mj2"});
      Content_Type.insert({"mjp2", "video/mj2"});
      Content_Type.insert({"mjs", "application/javascript"});
      Content_Type.insert({"mml", "text/mathml"});
      Content_Type.insert({"mods", "application/mods+xml"});
      Content_Type.insert({"mov", "video/quicktime"});
      Content_Type.insert({"mp2", "audio/mpeg"});
      Content_Type.insert({"mp21", "application/mp21"});
      Content_Type.insert({"mp2a", "audio/mpeg"});
      Content_Type.insert({"mp3", "audio/mpeg"});
      Content_Type.insert({"mp4", "video/mp4"});
      Content_Type.insert({"mp4a", "audio/mp4"});
      Content_Type.insert({"mp4s", "application/mp4"});
      Content_Type.insert({"mp4v", "video/mp4"});
      Content_Type.insert({"mpd", "application/dash+xml"});
      Content_Type.insert({"mpe", "video/mpeg"});
      Content_Type.insert({"mpeg", "video/mpeg"});
      Content_Type.insert({"mpg", "video/mpeg"});
      Content_Type.insert({"mpg4", "video/mp4"});
      Content_Type.insert({"mpga", "audio/mpeg"});
      Content_Type.insert({"mrc", "application/marc"});
      Content_Type.insert({"mrcx", "application/marcxml+xml"});
      Content_Type.insert({"ms", "text/troff"});
      Content_Type.insert({"mscml", "application/mediaservercontrol+xml"});
      Content_Type.insert({"msh", "model/mesh"});
      Content_Type.insert({"msi", "application/octet-stream"});
      Content_Type.insert({"msm", "application/octet-stream"});
      Content_Type.insert({"msp", "application/octet-stream"});
      Content_Type.insert({"mxf", "application/mxf"});
      Content_Type.insert({"mxml", "application/xv+xml"});
      Content_Type.insert({"n3", "text/n3"});
      Content_Type.insert({"nb", "application/mathematica"});
      Content_Type.insert({"oda", "application/oda"});
      Content_Type.insert({"oga", "audio/ogg"});
      Content_Type.insert({"ogg", "audio/ogg"});
      Content_Type.insert({"ogv", "video/ogg"});
      Content_Type.insert({"ogx", "application/ogg"});
      Content_Type.insert({"omdoc", "application/omdoc+xml"});
      Content_Type.insert({"onepkg", "application/onenote"});
      Content_Type.insert({"onetmp", "application/onenote"});
      Content_Type.insert({"onetoc", "application/onenote"});
      Content_Type.insert({"onetoc2", "application/onenote"});
      Content_Type.insert({"opf", "application/oebps-package+xml"});
      Content_Type.insert({"otf", "font/otf"});
      Content_Type.insert({"owl", "application/rdf+xml"});
      Content_Type.insert({"oxps", "application/oxps"});
      Content_Type.insert({"p10", "application/pkcs10"});
      Content_Type.insert({"p7c", "application/pkcs7-mime"});
      Content_Type.insert({"p7m", "application/pkcs7-mime"});
      Content_Type.insert({"p7s", "application/pkcs7-signature"});
      Content_Type.insert({"p8", "application/pkcs8"});
      Content_Type.insert({"pdf", "application/pdf"});
      Content_Type.insert({"pfr", "application/font-tdpfr"});
      Content_Type.insert({"pgp", "application/pgp-encrypted"});
      Content_Type.insert({"pkg", "application/octet-stream"});
      Content_Type.insert({"pki", "application/pkixcmp"});
      Content_Type.insert({"pkipath", "application/pkix-pkipath"});
      Content_Type.insert({"pls", "application/pls+xml"});
      Content_Type.insert({"png", "image/png"});
      Content_Type.insert({"prf", "application/pics-rules"});
      Content_Type.insert({"ps", "application/postscript"});
      Content_Type.insert({"pskcxml", "application/pskc+xml"});
      Content_Type.insert({"qt", "video/quicktime"});
      Content_Type.insert({"raml", "application/raml+yaml"});
      Content_Type.insert({"rdf", "application/rdf+xml"});
      Content_Type.insert({"rif", "application/reginfo+xml"});
      Content_Type.insert({"rl", "application/resource-lists+xml"});
      Content_Type.insert({"rld", "application/resource-lists-diff+xml"});
      Content_Type.insert({"rmi", "audio/midi"});
      Content_Type.insert({"rnc", "application/relax-ng-compact-syntax"});
      Content_Type.insert({"rng", "application/xml"});
      Content_Type.insert({"roa", "application/rpki-roa"});
      Content_Type.insert({"roff", "text/troff"});
      Content_Type.insert({"rq", "application/sparql-query"});
      Content_Type.insert({"rs", "application/rls-services+xml"});
      Content_Type.insert({"rsd", "application/rsd+xml"});
      Content_Type.insert({"rss", "application/rss+xml"});
      Content_Type.insert({"rtf", "application/rtf"});
      Content_Type.insert({"rtx", "text/richtext"});
      Content_Type.insert({"s3m", "audio/s3m"});
      Content_Type.insert({"sbml", "application/sbml+xml"});
      Content_Type.insert({"scq", "application/scvp-cv-request"});
      Content_Type.insert({"scs", "application/scvp-cv-response"});
      Content_Type.insert({"sdp", "application/sdp"});
      Content_Type.insert({"ser", "application/java-serialized-object"});
      Content_Type.insert({"setpay", "application/set-payment-initiation"});
      Content_Type.insert({"setreg", "application/set-registration-initiation"});
      Content_Type.insert({"sgi", "image/sgi"});
      Content_Type.insert({"sgm", "text/sgml"});
      Content_Type.insert({"sgml", "text/sgml"});
      Content_Type.insert({"shex", "text/shex"});
      Content_Type.insert({"shf", "application/shf+xml"});
      Content_Type.insert({"shtml", "text/html"});
      Content_Type.insert({"sig", "application/pgp-signature"});
      Content_Type.insert({"sil", "audio/silk"});
      Content_Type.insert({"silo", "model/mesh"});
      Content_Type.insert({"slim", "text/slim"});
      Content_Type.insert({"slm", "text/slim"});
      Content_Type.insert({"smi", "application/smil+xml"});
      Content_Type.insert({"smil", "application/smil+xml"});
      Content_Type.insert({"snd", "audio/basic"});
      Content_Type.insert({"so", "application/octet-stream"});
      Content_Type.insert({"spp", "application/scvp-vp-response"});
      Content_Type.insert({"spq", "application/scvp-vp-request"});
      Content_Type.insert({"spx", "audio/ogg"});
      Content_Type.insert({"sru", "application/sru+xml"});
      Content_Type.insert({"srx", "application/sparql-results+xml"});
      Content_Type.insert({"ssdl", "application/ssdl+xml"});
      Content_Type.insert({"ssml", "application/ssml+xml"});
      Content_Type.insert({"stk", "application/hyperstudio"});
      Content_Type.insert({"styl", "text/stylus"});
      Content_Type.insert({"stylus", "text/stylus"});
      Content_Type.insert({"svg", "image/svg+xml"});
      Content_Type.insert({"svgz", "image/svg+xml"});
      Content_Type.insert({"t", "text/troff"});
      Content_Type.insert({"t38", "image/t38"});
      Content_Type.insert({"tei", "application/tei+xml"});
      Content_Type.insert({"teicorpus", "application/tei+xml"});
      Content_Type.insert({"text", "text/plain"});
      Content_Type.insert({"tfi", "application/thraud+xml"});
      Content_Type.insert({"tfx", "image/tiff-fx"});
      Content_Type.insert({"tif", "image/tiff"});
      Content_Type.insert({"tiff", "image/tiff"});
      Content_Type.insert({"tr", "text/troff"});
      Content_Type.insert({"ts", "video/mp2t"});
      Content_Type.insert({"tsd", "application/timestamped-data"});
      Content_Type.insert({"tsv", "text/tab-separated-values"});
      Content_Type.insert({"ttc", "font/collection"});
      Content_Type.insert({"ttf", "font/ttf"});
      Content_Type.insert({"ttl", "text/turtle"});
      Content_Type.insert({"txt", "text/plain"});
      Content_Type.insert({"u8dsn", "message/global-delivery-status"});
      Content_Type.insert({"u8hdr", "message/global-headers"});
      Content_Type.insert({"u8mdn", "message/global-disposition-notification"});
      Content_Type.insert({"u8msg", "message/global"});
      Content_Type.insert({"uri", "text/uri-list"});
      Content_Type.insert({"uris", "text/uri-list"});
      Content_Type.insert({"urls", "text/uri-list"});
      Content_Type.insert({"vcard", "text/vcard"});
      Content_Type.insert({"vrml", "model/vrml"});
      Content_Type.insert({"vtt", "text/vtt"});
      Content_Type.insert({"vxml", "application/voicexml+xml"});
      Content_Type.insert({"war", "application/java-archive"});
      Content_Type.insert({"wasm", "application/wasm"});
      Content_Type.insert({"wav", "audio/wav"});
      Content_Type.insert({"weba", "audio/webm"});
      Content_Type.insert({"webm", "video/webm"});
      Content_Type.insert({"webmanifest", "application/manifest+json"});
      Content_Type.insert({"webp", "image/webp"});
      Content_Type.insert({"wgt", "application/widget"});
      Content_Type.insert({"wmf", "image/wmf"});
      Content_Type.insert({"woff", "font/woff"});
      Content_Type.insert({"woff2", "font/woff2"});
      Content_Type.insert({"wrl", "model/vrml"});
      Content_Type.insert({"wsdl", "application/wsdl+xml"});
      Content_Type.insert({"wspolicy", "application/wspolicy+xml"});
      Content_Type.insert({"x3d", "model/x3d+xml"});
      Content_Type.insert({"x3db", "model/x3d+binary"});
      Content_Type.insert({"x3dbz", "model/x3d+binary"});
      Content_Type.insert({"x3dv", "model/x3d+vrml"});
      Content_Type.insert({"x3dvz", "model/x3d+vrml"});
      Content_Type.insert({"x3dz", "model/x3d+xml"});
      Content_Type.insert({"xaml", "application/xaml+xml"});
      Content_Type.insert({"xdf", "application/xcap-diff+xml"});
      Content_Type.insert({"xdssc", "application/dssc+xml"});
      Content_Type.insert({"xenc", "application/xenc+xml"});
      Content_Type.insert({"xer", "application/patch-ops-error+xml"});
      Content_Type.insert({"xht", "application/xhtml+xml"});
      Content_Type.insert({"xhtml", "application/xhtml+xml"});
      Content_Type.insert({"xhvml", "application/xv+xml"});
      Content_Type.insert({"xm", "audio/xm"});
      Content_Type.insert({"xml", "application/xml"});
      Content_Type.insert({"xop", "application/xop+xml"});
      Content_Type.insert({"xpl", "application/xproc+xml"});
      Content_Type.insert({"xsd", "application/xml"});
      Content_Type.insert({"xsl", "application/xml"});
      Content_Type.insert({"xslt", "application/xslt+xml"});
      Content_Type.insert({"xspf", "application/xspf+xml"});
      Content_Type.insert({"xvm", "application/xv+xml"});
      Content_Type.insert({"xvml", "application/xv+xml"});
      Content_Type.insert({"yaml", "text/yaml"});
      Content_Type.insert({"yang", "application/yang"});
      Content_Type.insert({"yin", "application/yin+xml"});
      Content_Type.insert({"yml", "text/yaml"});
      Content_Type.insert({"zip", "application/zip"});
    }

    std::string operator[](std::string key) {
      return Content_Type[key];
    }
};
